МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ














Звіт 
до практичного заняття №2 з дисципліни
«Аналіз та рефакторинг коду»
На тему: «Методи рефакторингу коду програмного забезпечення» 
























Перевірив                                                            Виконав 
ст. викладач ПІ                                                          ст. групи ПЗПІ-22-7 
Сокорчук Ігор Петрович                                     Кравцов Я.П.
            




















Харків 2024
1 МЕТА 
Ознайомитися з методами рефакторингу коду програмного забезпечення, зрозуміти їхнє практичне застосування та закріпити навички покращення якості коду.


2 ЗАВДАННЯ


Обрати обрати 3 метода рефакторингу. Створити презентацію на тему  «Методи рефакторингу коду програмного забезпечення».


3 ХІД РОБОТИ
Мною обрана маова програмування TypeScript. 


1. Методи рефакторингу коду


Опис:
Рефакторинг – це процес покращення внутрішньої структури коду без зміни його зовнішньої поведінки.
У цій презентації розглянемо три методи:
* Remove Parameter
* Remove Setting Method
* Remove Middle Man


2. Метод 1 – Remove Parameter


Опис:
Цей метод використовується, коли параметр більше не потрібен для виконання методу.
Зайві параметри ускладнюють читання та підтримку коду


1. //До рефакторингу:
2. function calculateDiscount(price: number, isMember: boolean) {
3.     if (isMember) {
4.         return price * 0.9;
5.     }
6.     return price;
7. }
8. 9. //Після рефакторингу:
10. function calculateMemberDiscount(price: number) {
11.     return price * 0.9;
12. }


3. Теоретичне обґрунтування Remove Parameter


Опис:
Чому параметр isMember був зайвим?
* Логічне дублювання
* Складність підтримки
* Принцип єдиної відповідальності (SRP)
Метод Remove Parameter допомагає спростити код, усуваючи непотрібні залежності та дублювання логіки.


4. Метод 2 – Remove Setting Method


Опис:
* Метод використовується, коли об'єкт повинен бути незмінним після створення.
* Наявність сеттерів може дозволити змінити стан об'єкта у непередбачений спосіб.


1. //До рефакторингу:
2. class User {
3.     private name: string;
4. 5.     constructor(name: string) {
6.         this.name = name;
7.     }
8. 9.     setName(newName: string) {
10.         this.name = newName;
11.     }
12. }
13. 14. //Після рефакторингу:
15. class User {
16.     private readonly name: string;
17. 18.     constructor(name: string) {
19.         this.name = name;
20.     }
21. }


5. Теоретичне обґрунтування Remove Setting Method




Опис:
Чому сеттер є потенційною загрозою?
* Порушення інкапсуляції:
* Тестування
* Стабільність
Remove Setting Method підвищує надійність і стабільність програмного коду.


6. Метод 3 – Remove Middle Man


* Метод застосовується, коли методи у класі лише передають виклики іншому об'єкту.
* Це додає непотрібний рівень абстракції.


1. //До рефакторингу:
2. class Department {
3.     manager: string;
4. 5.     constructor(manager: string) {
6.         this.manager = manager;
7.     }
8. }
9. 10. class Employee {
11.     private department: Department;
12. 13.     constructor(department: Department) {
14.         this.department = department;
15.     }
16. 17.     getManager() {
18.         return this.department.manager;
19.     }
20. }
21. 22. //Після рефакторингу:
23. class Department {
24.     manager: string;
25. 26.     constructor(manager: string) {
27.         this.manager = manager;
28.     }
29. }


7. Висновки


Опис:
* Remove Parameter: Зменшення непотрібних параметрів робить методи чистішими.
* Remove Setting Method: Зміцнення незмінності об'єктів забезпечує стабільність системи.
* Remove Middle Man: Спрощення доступу до властивостей усуває непотрібні рівні абстракції.
Рефакторинг покращує читабельність, підтримуваність і надійність коду.




ВИСНОВКИ
Таким чином, під час роботи ми ознайомитились з методами рефакторингу коду програмного забезпечення, та зрозуміли їхнє практичне застосування та закріпити навички покращення якості коду.


Посилання на youtube:
https://www.youtube.com/watch?v=VzH6hvLAwv4










































ДОДАТОК А
Презентація на тему «Методи рефакторингу коду програмного забезпечення»
